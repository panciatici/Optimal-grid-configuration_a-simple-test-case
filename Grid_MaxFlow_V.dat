# Grid_MaxFlow_Q.dat
#  Description: Overleaf Simple Electrical Grid
# 12 substations
# 59 breakers
# 62 busbars
# 32 powerlines

param n := 62;

set BREAKER :=
# Substation a : 6 busbars from north west clockwise
1 2
2 3
3 4
4 5
5 6
6 1
# Substation b : 2 busbars
7 8
# Substation c : 2 busbars
9 10
# Substation d : 6 busbars from north west clockwise
11 12
12 13
13 14
14 15
15 16
16 11
# Substation e : 6 busbars from north west clockwise
17 18
18 19
19 20
20 21
21 22
22 17
# Substation f : 6 busbars from north west clockwise
23 24
24 25
25 26
26 27
27 28
28 23
# Substation g : 6 busbars from north west clockwise
29 30
30 31
31 32
32 33
33 34
34 29
# Substation h : 6 busbars from north west clockwise
35 36
36 37
37 38
38 39
39 40
40 35
# Substation i : 8 busbars from north west clockwise
41 42
42 43
43 44
44 45
45 46
46 47
47 48
48 41
# Substation j : 2 busbars
49 50
# Substation k : 6 busbars from north west clockwise
51 52
52 53
53 54
54 55
55 56
56 51
# Substation l : 6 busbars from north west clockwise
57 58
58 59
59 60
60 61
61 62
62 57;

set BRANCH := 
# a to b
1 7
2 8
# a to c
3 9
4 10
# a to d
5 15
6 16
# b to e
7 21
8 22
# d to e
11 17
12 18
# c to f
9 27
10 28
# d to f
13 25
14 26
# e to g : interconnection
19 33
20 34
# f to h : interconnection
23 39
24 40
# g to i
31 41
32 42
# h to i
35 46
36 47
# g to k
29 55
30 56
# j to k
49 53
50 54
# h to l
37 61
38 62
# i to l
45 57
46 58
# j to l
49 59
50 60;

param : Branch_X Branch_Fmax InterC :=
1 7 1 400 0
2 8 1 400 0
3 9 1 400 0
4 10 1 400 0
5 15 1 400 0
6 16 1 400 0
7 21 1 400 0
8 22 1 400 0
9 27 1 400 0
10 28 1 400 0
11 17 1 400 0
12 18 1 400 0
13 25 1 400 0
14 26 1 400 0
#
# e to g : interconnection
19 33 2 6000 1
20 34 2 6000 1
# f to h : interconnection
23 39 2 6000 1
24 40 2 6000 1
#
31 41 1 400 0
32 42 1 400 0
29 55 1 400 0
30 56 1 400 0
35 46 1 400 0
36 47 1 400 0
49 53 1 400 0
50 54 1 400 0
37 61 1 400 0
38 62 1 400 0
45 57 1 400 0
48 58 1 400 0
49 59 1 400 0
50 60 1 400 0; 

param : Pload Pgen Zone:= 
# Substation a : 6 busbars from north west clockwise
1 0 300 1
2 100 0 1
3 0 600 1
4 300 0 1
5 0 700 1
6 300 0 1
# Substation b : 2 busbars
7 100 0 1
8 0 300 1
# Substation c : 2 busbars
9 0 300  1
10 100 0 1
#Substation d : 6 busbars from north west clockwise
11 0 300 1
12 100 0 1
13 0 500 1
14 300 0 1
15 0 700 1
16 300 0 1
#Substation e : 6 busbars from north west clockwise
17 0 300 1
18 100 0 1
19 0 500 1
20 300 0 1
21 0 700 1
22 300 0 1
#Substation f : 6 busbars from north west clockwise
23 0 300 1
24 100 0 1
25 0 500 1
26 300 0 1
27 0 700 1
28 300 0 1
#Substation g : 6 busbars from north west clockwise
29 0 100 2
30 200 0 2
31 0 200 2
32 500 0 2
33 0 300 2
34 600 0 2
#Substation h : 6 busbars from north west clockwise
35 0 100 2
36 200 0 2
37 0 200 2
38 500 0 2
39 0 300 2
40 600 0 2
#Substation i : 8 busbars from north west clockwise
41 0 100 2
42 200 0 2
43 0 200 2
44 500 0 2
45 0 300 2
46 600 0 2
47 0 400 2
48 800 0 2
# Substation j : 2 busbars
49 200 0 2
50 0 100 2
#Substation k : 6 busbars from north west clockwise
51 0 100 2
52 200 0 2
53 0 200 2
54 500 0 2
55 0 300 2
56 300 0 2
#Substation l : 6 busbars from north west clockwise
57 0 100 2
58 200 0 2
59 0 200 2
60 500 0 2
61 0 300 2
62 600 0 2;

let Angle[1] := 0.00;
fix Angle[1];

printf "\n Total Generation : %8.f\n",sum{k in BUS} Pgen[k];
printf "\n Total Load : %8.f\n\n",sum{k in BUS} Pload[k];




